{"ast":null,"code":"var _jsxFileName = \"/Users/macp/MAC P/SIH-Temp/frontend/src/components/projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const initialProjectData = {\n    title: '',\n    description: '',\n    imageUrls: [],\n    tags: '',\n    // Initialize tags as an empty string\n    link: '',\n    projectType: '' // Initialize projectType as an empty string\n  };\n\n  const [projectsData, setProjectsData] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [newProject, setNewProject] = useState(initialProjectData);\n  const toggleForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    if (type === 'radio' && name === 'projectType') {\n      setNewProject({\n        ...newProject,\n        [name]: value\n      });\n    } else {\n      // Check if the input is for \"tags\"\n      if (name === 'tags') {\n        // Replace spaces with spaces followed by \"#\" to create hashtags\n        const tagsValue = value.replace(/ /g, ' #');\n\n        // Remove \"#\" if it appears at the beginning\n        if (tagsValue.startsWith('# ')) {\n          setNewProject({\n            ...newProject,\n            [name]: tagsValue.substring(2) // Remove the first two characters (the extra \"# \")\n          });\n        } else {\n          setNewProject({\n            ...newProject,\n            [name]: tagsValue\n          });\n        }\n      } else {\n        setNewProject({\n          ...newProject,\n          [name]: value\n        });\n      }\n    }\n  };\n  const handleImageChange = e => {\n    const files = e.target.files;\n    const imageFiles = Array.from(files);\n    setNewProject({\n      ...newProject,\n      imageUrls: [],\n      // Reset imageUrls to an empty array\n      imageFiles\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const imageUrls = newProject.imageFiles.map(file => URL.createObjectURL(file));\n    const projectWithImages = {\n      ...newProject,\n      imageUrls\n    };\n    setProjectsData([...projectsData, projectWithImages]);\n    setNewProject(initialProjectData);\n    toggleForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Explore User-Submitted Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleForm,\n      className: \"add-project-button\",\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Your Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Title\",\n          value: newProject.title,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: newProject.description,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"imageFiles\",\n          accept: \"image/*\",\n          multiple: true,\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tags\",\n          placeholder: \"Tags\",\n          value: newProject.tags,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-type\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"projectType\",\n              value: \"School\",\n              onChange: handleInputChange,\n              checked: newProject.projectType === 'School'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), \"School\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"projectType\",\n              value: \"College\",\n              onChange: handleInputChange,\n              checked: newProject.projectType === 'College'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), \"College\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"projectType\",\n              value: \"Others\",\n              onChange: handleInputChange,\n              checked: newProject.projectType === 'Others'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), \"Others\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          name: \"link\",\n          placeholder: \"Project Link\",\n          value: newProject.link,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [project.imageUrls.map((imageUrl, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: `${project.title}-image-${imgIndex}`\n        }, imgIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.projectType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"cDEmirqs3XOw0Urs0227whQFQqY=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Projects","_s","initialProjectData","title","description","imageUrls","tags","link","projectType","projectsData","setProjectsData","isFormVisible","setIsFormVisible","newProject","setNewProject","toggleForm","handleInputChange","e","name","value","type","target","tagsValue","replace","startsWith","substring","handleImageChange","files","imageFiles","Array","from","handleSubmit","preventDefault","map","file","URL","createObjectURL","projectWithImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","onChange","required","accept","multiple","checked","project","index","imageUrl","imgIndex","src","alt","href","rel","_c","$RefreshReg$"],"sources":["/Users/macp/MAC P/SIH-Temp/frontend/src/components/projects/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './projects.css';\n\nconst Projects = () => {\n  const initialProjectData = {\n    title: '',\n    description: '',\n    imageUrls: [],\n    tags: '', // Initialize tags as an empty string\n    link: '',\n    projectType: '', // Initialize projectType as an empty string\n  };\n\n  const [projectsData, setProjectsData] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [newProject, setNewProject] = useState(initialProjectData);\n\n  const toggleForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type } = e.target;\n\n    if (type === 'radio' && name === 'projectType') {\n      setNewProject({\n        ...newProject,\n        [name]: value,\n      });\n    } else {\n      // Check if the input is for \"tags\"\n      if (name === 'tags') {\n        // Replace spaces with spaces followed by \"#\" to create hashtags\n        const tagsValue = value.replace(/ /g, ' #');\n\n        // Remove \"#\" if it appears at the beginning\n        if (tagsValue.startsWith('# ')) {\n          setNewProject({\n            ...newProject,\n            [name]: tagsValue.substring(2), // Remove the first two characters (the extra \"# \")\n          });\n        } else {\n          setNewProject({\n            ...newProject,\n            [name]: tagsValue,\n          });\n        }\n      } else {\n        setNewProject({\n          ...newProject,\n          [name]: value,\n        });\n      }\n    }\n  };\n\n  const handleImageChange = (e) => {\n    const files = e.target.files;\n    const imageFiles = Array.from(files);\n\n    setNewProject({\n      ...newProject,\n      imageUrls: [], // Reset imageUrls to an empty array\n      imageFiles,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const imageUrls = newProject.imageFiles.map((file) => URL.createObjectURL(file));\n\n    const projectWithImages = {\n      ...newProject,\n      imageUrls,\n    };\n\n    setProjectsData([...projectsData, projectWithImages]);\n    setNewProject(initialProjectData);\n    toggleForm();\n  };\n\n  return (\n    <div className=\"projects-container\">\n      <h2>Explore User-Submitted Projects</h2>\n      <button onClick={toggleForm} className=\"add-project-button\">\n        Add Project\n      </button>\n\n      {isFormVisible && (\n        <div className=\"project-form\">\n          <h3>Add Your Project</h3>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              value={newProject.title}\n              onChange={handleInputChange}\n              required\n            />\n            <input\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Description\"\n              value={newProject.description}\n              onChange={handleInputChange}\n              required\n            />\n            <input\n              type=\"file\"\n              name=\"imageFiles\"\n              accept=\"image/*\"\n              multiple\n              onChange={handleImageChange}\n              required\n            />\n            <input\n              type=\"text\"\n              name=\"tags\"\n              placeholder=\"Tags\"\n              value={newProject.tags}\n              onChange={handleInputChange}\n              required\n            />\n            <div className=\"project-type\">\n              <label>Project Type:</label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"projectType\"\n                  value=\"School\"\n                  onChange={handleInputChange}\n                  checked={newProject.projectType === 'School'}\n                />\n                School\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"projectType\"\n                  value=\"College\"\n                  onChange={handleInputChange}\n                  checked={newProject.projectType === 'College'}\n                />\n                College\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"projectType\"\n                  value=\"Others\"\n                  onChange={handleInputChange}\n                  checked={newProject.projectType === 'Others'}\n                />\n                Others\n              </label>\n            </div>\n            <input\n              type=\"url\"\n              name=\"link\"\n              placeholder=\"Project Link\"\n              value={newProject.link}\n              onChange={handleInputChange}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      )}\n\n      <div className=\"project-list\">\n        {projectsData.map((project, index) => (\n          <div className=\"project-card\" key={index}>\n            {project.imageUrls.map((imageUrl, imgIndex) => (\n              <img src={imageUrl} alt={`${project.title}-image-${imgIndex}`} key={imgIndex} />\n            ))}\n            <div className=\"project-details\">\n              <h3>{project.title}</h3>\n              <p>{project.description}</p>\n              <p>{project.tags}</p>\n              <p>{project.projectType}</p>\n              <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                Learn More\n              </a>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}