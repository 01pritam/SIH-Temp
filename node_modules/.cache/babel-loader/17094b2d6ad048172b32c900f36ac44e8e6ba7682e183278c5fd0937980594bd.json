{"ast":null,"code":"var _jsxFileName = \"/Users/macp/MAC P/SIH-Temp/frontend/src/components/projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const initialProjectData = {\n    title: '',\n    description: '',\n    imageUrls: [],\n    tags: '',\n    // Initialize tags as an empty string\n    link: '',\n    projectType: '' // Initialize projectType as an empty string\n  };\n\n  const [projectsData, setProjectsData] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [newProject, setNewProject] = useState(initialProjectData);\n  const toggleForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n  const handleInputChange = e => {\n    // ... (Your existing input change handling code)\n  };\n  const handleImageChange = e => {\n    // ... (Your existing image change handling code)\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const imageUrls = newProject.imageFiles.map(file => URL.createObjectURL(file));\n    const projectWithImages = {\n      ...newProject,\n      imageUrls\n    };\n    try {\n      // Send the data to the server using Axios\n      const response = await axios.post('/api/projects', projectWithImages); // Replace with your server endpoint\n      console.log('Server response:', response.data);\n\n      // Update projectsData and reset the form\n      setProjectsData([...projectsData, projectWithImages]);\n      setNewProject(initialProjectData);\n      toggleForm();\n    } catch (error) {\n      console.error('Error sending data to the server:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"cDEmirqs3XOw0Urs0227whQFQqY=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Projects","_s","initialProjectData","title","description","imageUrls","tags","link","projectType","projectsData","setProjectsData","isFormVisible","setIsFormVisible","newProject","setNewProject","toggleForm","handleInputChange","e","handleImageChange","handleSubmit","preventDefault","imageFiles","map","file","URL","createObjectURL","projectWithImages","response","post","console","log","data","error","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macp/MAC P/SIH-Temp/frontend/src/components/projects/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Projects.css';\n\nconst Projects = () => {\n  const initialProjectData = {\n    title: '',\n    description: '',\n    imageUrls: [],\n    tags: '', // Initialize tags as an empty string\n    link: '',\n    projectType: '', // Initialize projectType as an empty string\n  };\n\n  const [projectsData, setProjectsData] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [newProject, setNewProject] = useState(initialProjectData);\n\n  const toggleForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n\n  const handleInputChange = (e) => {\n    // ... (Your existing input change handling code)\n  };\n\n  const handleImageChange = (e) => {\n    // ... (Your existing image change handling code)\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const imageUrls = newProject.imageFiles.map((file) => URL.createObjectURL(file));\n\n    const projectWithImages = {\n      ...newProject,\n      imageUrls,\n    };\n\n    try {\n      // Send the data to the server using Axios\n      const response = await axios.post('/api/projects', projectWithImages); // Replace with your server endpoint\n      console.log('Server response:', response.data);\n\n      // Update projectsData and reset the form\n      setProjectsData([...projectsData, projectWithImages]);\n      setNewProject(initialProjectData);\n      toggleForm();\n    } catch (error) {\n      console.error('Error sending data to the server:', error);\n    }\n  };\n\n  return (\n    <div className=\"projects-container\">\n      {/* ... (Your existing JSX code) */}\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,kBAAkB,GAAG;IACzBC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,EAAE;IAAE;IACVC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE,CAAE;EACnB,CAAC;;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAACM,kBAAkB,CAAC;EAEhE,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBH,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,MAAMK,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;EAAA,CACD;EAED,MAAMC,iBAAiB,GAAID,CAAC,IAAK;IAC/B;EAAA,CACD;EAED,MAAME,YAAY,GAAG,MAAOF,CAAC,IAAK;IAChCA,CAAC,CAACG,cAAc,CAAC,CAAC;IAElB,MAAMf,SAAS,GAAGQ,UAAU,CAACQ,UAAU,CAACC,GAAG,CAAEC,IAAI,IAAKC,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;IAEhF,MAAMG,iBAAiB,GAAG;MACxB,GAAGb,UAAU;MACbR;IACF,CAAC;IAED,IAAI;MACF;MACA,MAAMsB,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,eAAe,EAAEF,iBAAiB,CAAC,CAAC,CAAC;MACvEG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAE9C;MACArB,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEiB,iBAAiB,CAAC,CAAC;MACrDZ,aAAa,CAACZ,kBAAkB,CAAC;MACjCa,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACEjC,OAAA;IAAKkC,SAAS,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV,CAAC;AAACpC,EAAA,CAvDID,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}